@using Microsoft.AspNetCore.Identity;
@model ReviewsPortal.ViewModels.LoginViewModel
@inject SignInManager<User> signInManager

<h2>Вход в приложение</h2>
<form method="post" asp-controller="Account" asp-action="Login"
      asp-route-returnUrl="@Model.ReturnUrl">
    <div asp-validation-summary="ModelOnly"></div>
    <div>
        <label asp-for="Email"></label><br />
        <input asp-for="Email" />
        <span asp-validation-for="Email"></span>
    </div>
    <div>
        <label asp-for="Password"></label><br />
        <input asp-for="Password" />
        <span asp-validation-for="Password"></span>
    </div>
    <div>
        <label asp-for="RememberMe"></label><br />
        <input asp-for="RememberMe" />
    </div>
    <div>
        <input type="submit" value="Войти" />
    </div>
</form>

@{
    var schemes = await signInManager.GetExternalAuthenticationSchemesAsync();
    var loginProivders = schemes.ToList();
}
@if (loginProivders.Count() > 0)
{
    <div class="col-md-4">
        <section>
            <h4>User another service to log in.</h4>
            <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" role="form">
                <div>
                    <p>
                        @foreach (var provider in loginProivders)
                        {
                            <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name"
                            title="Log in using your @provider.Name account">
                                @provider.Name
                            </button>
                        }
                    </p>
                </div>
            </form>
        </section>
    </div>
}